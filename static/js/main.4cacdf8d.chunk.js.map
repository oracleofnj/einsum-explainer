{"version":3,"sources":["pkg/einsum.js","types/einsum_typeguards.ts","appstate/ducks/updateEquation.ts","appstate/ducks/updateShape.ts","appstate/ducks/updateContents.ts","appstate/ducks/addShape.ts","utils/range.ts","appstate/appState.ts","appstate/makeReducer.ts","components/ExplainerInput.tsx","utils/makeLatexString.ts","components/ContractionOutput.tsx","components/AxisLengthsOutput.tsx","utils/parseShapeStrings.ts","utils/parseOutputString.ts","components/ExplainerOutput.tsx","components/EinsumExplainer.tsx","utils/serviceWorker.js","index.js"],"names":["wasm","passStringToWasm","__exports","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","encodeInto","arg","size","length","ptr","__wbindgen_malloc","writeOffset","view","subarray","_cachedTextEncoder$en","read","written","substring","__wbindgen_realloc","buf","encode","set","cachedTextDecoder","TextDecoder","getStringFromWasm","len","decode","cachedGlobalArgumentPtr","globalArgumentPtr","__wbindgen_global_argument_ptr","cachegetUint32Memory","getUint32Memory","Uint32Array","validateAsJson","input_string","ptr0","len0","retptr","mem","rustptr","rustlen","realRet","slice","__wbindgen_free","validateAndSizeFromShapesAsStringAsJson","operand_shapes","ptr1","len1","slowEinsumAsJson","flattened_operands_as_string","heap","Array","fill","undefined","push","heap_next","__wbindgen_object_drop_ref","i","idx","init","module","result","imports","./einsum","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","e","console","warn","then","r","arrayBuffer","bytes","instantiate","Instance","instance","_ref","exports","__wbindgen_wasm_module","isErrorMessage","hasOwnProperty","isContraction","operand_indices","isContractionSuccess","Ok","isSizedContraction","contraction","Object","entries","every","_ref2","slicedToArray","isOutputSize","output_size","isSizedContractionValidationResult","isSizedContractionSuccess","typeguard","action","type","equation","updateEquation","actionCreator","reducer","state","anyEinsumExplanation","visibleSizes","JSON","parse","_unused","objectSpread","TypeError","stringify","UPDATE_SHAPE","index","shape","updateShape","operandShapes","concat","toConsumableArray","UPDATE_CONTENTS","contents","updateContents","operandContents","addShape","range","start","stop","step","arguments","Error","val","initialState","appActions","addShapeDuck","updateEquationDuck","updateShapeDuck","updateContentsDuck","ducks","appReducers","forEach","duck","makeReducer","ExplainerInput","props","appState","dispatch","einsumString","shapes","makeOnShapeChange","target","value","makeOnContentsChange","react_default","a","createElement","Fragment","onClick","onChange","map","key","String","fromCharCode","charCodeAt","makeLatexString","outputMatrix","output_indices","join","summationSymbols","summation_indices","inputMatrices","indices","n","asciiA","matrixName","subscripts","split","ContractionOutput","contractionErrorMessage","dangerousKatexHTML","explanation","explanationJSON","Err","latexString","__html","renderToString","dangerouslySetInnerHTML","AxisLengthsOutput","sizeErrorMessage","outputSize","sizedExplanation","sizedExplanationJSON","anySizedExplanation","parseShapeString","shapeString","replace","s","parseInt","trim","parseOutput","unflatten","stride","ExplainerOutput","outputJSON","flattenedContents","flat","Math","pow","outputStr","output","_unused2","components_ContractionOutput","components_AxisLengthsOutput","EinsumExplainer","_useReducer","useReducer","_useReducer2","className","components_ExplainerInput","components_ExplainerOutput","Boolean","window","location","hostname","match","_run","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","ReactDOM","render","components_EinsumExplainer","document","getElementById","apply","this","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cacdf8d.chunk.js","sourcesContent":["\nconst __exports = {};\nlet wasm;\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let writeOffset = 0;\n        while (true) {\n            const view = getUint8Memory().subarray(ptr + writeOffset, ptr + size);\n            const { read, written } = cachedTextEncoder.encodeInto(arg, view);\n            writeOffset += written;\n            if (read === arg.length) {\n                break;\n            }\n            arg = arg.substring(read);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size += arg.length * 3);\n        }\n        WASM_VECTOR_LEN = writeOffset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = wasm.__wbindgen_malloc(buf.length);\n        getUint8Memory().set(buf, ptr);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    };\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n/**\n* @param {string} input_string\n* @returns {string}\n*/\nexport function validateAsJson(input_string) {\n    const ptr0 = passStringToWasm(input_string);\n    const len0 = WASM_VECTOR_LEN;\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.validateAsJson(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n\n    }\n\n}\n\n__exports.validateAsJson = validateAsJson;\n\n/**\n* @param {string} input_string\n* @param {string} operand_shapes\n* @returns {string}\n*/\nexport function validateAndSizeFromShapesAsStringAsJson(input_string, operand_shapes) {\n    const ptr0 = passStringToWasm(input_string);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm(operand_shapes);\n    const len1 = WASM_VECTOR_LEN;\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.validateAndSizeFromShapesAsStringAsJson(retptr, ptr0, len0, ptr1, len1);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        wasm.__wbindgen_free(ptr1, len1 * 1);\n\n    }\n\n}\n\n__exports.validateAndSizeFromShapesAsStringAsJson = validateAndSizeFromShapesAsStringAsJson;\n\n/**\n* @param {string} input_string\n* @param {string} flattened_operands_as_string\n* @returns {string}\n*/\nexport function slowEinsumAsJson(input_string, flattened_operands_as_string) {\n    const ptr0 = passStringToWasm(input_string);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm(flattened_operands_as_string);\n    const len1 = WASM_VECTOR_LEN;\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.slowEinsumAsJson(retptr, ptr0, len0, ptr1, len1);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        wasm.__wbindgen_free(ptr1, len1 * 1);\n\n    }\n\n}\n\n__exports.slowEinsumAsJson = slowEinsumAsJson;\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n__exports.__wbindgen_object_drop_ref = __wbindgen_object_drop_ref;\n\nfunction init(module) {\n    let result;\n    const imports = { './einsum': __exports };\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return wasm;\n    });\n}\n\nexport default init;\n\n","export type ErrorMessage = {\n  Err: string;\n};\n\nfunction isErrorMessage(r: any): r is ErrorMessage {\n  return (r as object).hasOwnProperty(\"Err\");\n}\n\nexport type Contraction = {\n  operand_indices: string[];\n  output_indices: string[];\n  summation_indices: string[];\n};\n\nfunction isContraction(r: object): r is Contraction {\n  return (\n    r.hasOwnProperty(\"operand_indices\") &&\n    (r as Contraction).operand_indices instanceof Array &&\n    r.hasOwnProperty(\"output_indices\") &&\n    r.hasOwnProperty(\"summation_indices\")\n  );\n}\n\nexport type ContractionSuccess = {\n  Ok: Contraction;\n};\n\nfunction isContractionSuccess(r: any): r is ContractionSuccess {\n  return (r as object).hasOwnProperty(\"Ok\") && isContraction((r as ContractionSuccess).Ok);\n}\n\nexport type ContractionValidationResult = ContractionSuccess | ErrorMessage;\n\nfunction isContractionValidationResult(r: any): r is ContractionValidationResult {\n  return (\n    isErrorMessage(r as ContractionValidationResult) ||\n    isContractionSuccess(r as ContractionValidationResult)\n  );\n}\n\nexport type OutputSize = { [key: string]: number };\n\nfunction isOutputSize(r: any): r is OutputSize {\n  return Object.entries(r as object).every(([_, val]) => typeof val === \"number\");\n}\n\nexport type SizedContraction = {\n  contraction: Contraction;\n  output_size: OutputSize;\n};\n\nfunction isSizedContraction(r: object): r is SizedContraction {\n  return (\n    r.hasOwnProperty(\"contraction\") &&\n    isContraction((r as SizedContraction).contraction) &&\n    r.hasOwnProperty(\"output_size\") &&\n    isOutputSize((r as SizedContraction).output_size)\n  );\n}\n\nexport type SizedContractionSuccess = {\n  Ok: SizedContraction;\n};\n\nfunction isSizedContractionSuccess(r: object): r is SizedContractionSuccess {\n  return r.hasOwnProperty(\"Ok\") && isSizedContraction((r as SizedContractionSuccess).Ok);\n}\n\nexport type SizedContractionValidationResult = SizedContractionSuccess | ErrorMessage;\n\nfunction isSizedContractionValidationResult(r: any): r is SizedContractionValidationResult {\n  return isErrorMessage(r) || isSizedContractionSuccess(r as SizedContractionValidationResult);\n}\n\nexport {\n  isErrorMessage,\n  isContractionSuccess,\n  isContractionValidationResult,\n  isSizedContractionValidationResult\n};\n","import { validateAsJson } from \"../../pkg/einsum\";\nimport { isContractionSuccess } from \"../../types/einsum_typeguards\";\nimport { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nconst UPDATE_EQUATION = \"updateEquation\";\n\nexport interface UpdateEquationAction extends AnyAction {\n  equation: string;\n}\n\nconst typeguard = (action: AppAction): action is UpdateEquationAction =>\n  action.type === UPDATE_EQUATION &&\n  action.hasOwnProperty(\"equation\") &&\n  typeof (action as UpdateEquationAction).equation === \"string\";\n\nconst actionCreator = (equation: string): UpdateEquationAction => ({\n  type: UPDATE_EQUATION,\n  equation\n});\n\nconst reducer = (state: AppState, action: AppAction): AppState => {\n  if (typeguard(action)) {\n    const { equation } = action;\n    let anyEinsumExplanation: any = null;\n    let { visibleSizes } = state;\n\n    try {\n      anyEinsumExplanation = JSON.parse(validateAsJson(equation));\n      if (isContractionSuccess(anyEinsumExplanation)) {\n        visibleSizes = anyEinsumExplanation.Ok.operand_indices.length;\n      }\n      // tslint:disable-next-line: no-empty\n    } catch {}\n\n    return {\n      ...state,\n      visibleSizes,\n      equation: (action as UpdateEquationAction).equation\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ action }));\n  }\n};\n\nexport default {\n  type: UPDATE_EQUATION,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","import { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nexport interface UpdateShapeAction extends AnyAction {\n  index: number;\n  shape: string;\n}\n\nconst UPDATE_SHAPE = \"updateShape\";\nfunction typeguard(action: AppAction): action is UpdateShapeAction {\n  return (\n    action.type === UPDATE_SHAPE &&\n    action.hasOwnProperty(\"index\") &&\n    typeof (action as UpdateShapeAction).index === \"number\" &&\n    action.hasOwnProperty(\"shape\") &&\n    typeof (action as UpdateShapeAction).shape === \"string\"\n  );\n}\n\nfunction actionCreator(index: number, shape: string): UpdateShapeAction {\n  return {\n    type: UPDATE_SHAPE,\n    index,\n    shape\n  };\n}\n\nfunction reducer(state: AppState, action: AppAction): AppState {\n  if (typeguard(action)) {\n    const { index, shape } = action;\n    return {\n      ...state,\n      operandShapes: [\n        ...state.operandShapes.slice(0, index),\n        shape,\n        ...state.operandShapes.slice(index + 1)\n      ]\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ reducer: UPDATE_SHAPE, action }));\n  }\n}\n\nexport default {\n  type: UPDATE_SHAPE,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","import { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nexport interface UpdateContentsAction extends AnyAction {\n  index: number;\n  contents: string;\n}\n\nconst UPDATE_CONTENTS = \"updateContents\";\nfunction typeguard(action: AppAction): action is UpdateContentsAction {\n  return (\n    action.type === UPDATE_CONTENTS &&\n    action.hasOwnProperty(\"index\") &&\n    typeof (action as UpdateContentsAction).index === \"number\" &&\n    action.hasOwnProperty(\"contents\") &&\n    typeof (action as UpdateContentsAction).contents === \"string\"\n  );\n}\n\nfunction actionCreator(index: number, contents: string): UpdateContentsAction {\n  return {\n    type: UPDATE_CONTENTS,\n    index,\n    contents\n  };\n}\n\nfunction reducer(state: AppState, action: AppAction): AppState {\n  if (typeguard(action)) {\n    const { index, contents } = action;\n    return {\n      ...state,\n      operandContents: [\n        ...state.operandContents.slice(0, index),\n        contents,\n        ...state.operandContents.slice(index + 1)\n      ]\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ reducer: UPDATE_CONTENTS, action }));\n  }\n}\n\nexport default {\n  type: UPDATE_CONTENTS,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","import { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nconst ADD_SHAPE = \"addShape\";\n\n// tslint:disable-next-line: no-empty-interface\nexport interface AddShapeAction extends AnyAction {}\n\nconst typeguard = (action: AppAction): action is AddShapeAction => action.type === ADD_SHAPE;\n\nconst actionCreator = (): AddShapeAction => ({\n  type: ADD_SHAPE\n});\n\nconst reducer = (state: AppState, action: AppAction): AppState => {\n  if (typeguard(action)) {\n    return {\n      ...state,\n      visibleSizes: state.visibleSizes + 1\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ action }));\n  }\n};\n\nexport default {\n  type: ADD_SHAPE,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","export default function range(start: number, stop?: number, step: number = 1) {\n  if (step === 0) {\n    throw new Error(\"range: step must not be zero\");\n  }\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n  }\n  const result: number[] = [];\n  let val = start;\n  while (val < stop) {\n    result.push(val);\n    val += step;\n  }\n  return result;\n}\n","import updateEquationDuck, { UpdateEquationAction } from \"./ducks/updateEquation\";\nimport updateShapeDuck, { UpdateShapeAction } from \"./ducks/updateShape\";\nimport updateContentsDuck, { UpdateContentsAction } from \"./ducks/updateContents\";\nimport addShapeDuck, { AddShapeAction } from \"./ducks/addShape\";\nimport makeReducer from \"./makeReducer\";\nimport range from \"../utils/range\";\n\n// What is the state of the app?\n// (1) The string the user entered\n// (2) How many arrays are visible that can have a size entered\n// (3) The shapes that have been entered (as strings)\n// (4) The contents that have been entered (as strings)\n//\n// Note: (1) and (2) can conflict\n// This is OK!\n// However, when the string changes, update (2) automatically if the new string is valid\n\n// To make a new action:\n// (1) Make a duck (type, typeguard, actionCreator, reducer)\n// (2) Export the duck and an interface extending AnyAction from the duck file\n// (3) Import the duck and the action in this file\n// (4) Add the action to \"type AppAction\"\n// (5) Add the action to \"const appActions\"\n// (6) Add the duck to the call to makeReducer()\n\nexport type AppState = {\n  equation: string;\n  visibleSizes: number;\n  operandShapes: string[];\n  operandContents: string[];\n};\n\nconst initialState: AppState = {\n  equation: \"ij,jk->ik\",\n  visibleSizes: 2,\n  operandShapes: [\"[2,3]\", \"[3,5]\"],\n  operandContents: [JSON.stringify(range(6)), JSON.stringify(range(0, 150, 10))]\n};\n\nexport type AppAction =\n  | AddShapeAction\n  | UpdateEquationAction\n  | UpdateShapeAction\n  | UpdateContentsAction;\n\nconst appActions = {\n  addShape: addShapeDuck.actionCreator,\n  updateEquation: updateEquationDuck.actionCreator,\n  updateShape: updateShapeDuck.actionCreator,\n  updateContents: updateContentsDuck.actionCreator\n};\nconst reducer = makeReducer([\n  addShapeDuck,\n  updateEquationDuck,\n  updateShapeDuck,\n  updateContentsDuck\n]);\n\nexport { initialState, reducer, appActions };\n","import { AppState, AppAction } from \"./appState\";\n\nexport interface AnyAction {\n  type: string;\n}\n\nexport type Reducer = (state: AppState, action: AppAction) => AppState;\nexport type ActionCreator = (...args: any[]) => AppAction;\nexport type ActionTypeGuard = (action: AppAction) => boolean;\nexport type Duck = {\n  type: string;\n  typeguard: ActionTypeGuard;\n  actionCreator: ActionCreator;\n  reducer: Reducer;\n};\n\nexport default function makeReducer(ducks: Duck[]): Reducer {\n  const appReducers: { [key: string]: Reducer } = {};\n\n  ducks.forEach(duck => {\n    if (appReducers[duck.type]) {\n      throw new Error(`Multiple declarations for ${duck.type}`);\n    } else {\n      appReducers[duck.type] = duck.reducer;\n    }\n  });\n\n  return (state: AppState, action: AppAction): AppState =>\n    appReducers[action.type](state, action);\n}\n","import React, { ChangeEvent } from \"react\";\nimport { appActions, AppState, AppAction } from \"../appstate/appState\";\nimport range from \"../utils/range\";\n\ntype ExplainerInputProps = {\n  appState: AppState;\n  dispatch: React.Dispatch<AppAction>;\n};\n\nconst ExplainerInput = (props: ExplainerInputProps) => {\n  const { appState, dispatch } = props;\n  const einsumString = appState.equation;\n  const { visibleSizes } = appState;\n  const shapes = appState.operandShapes.slice(0, visibleSizes);\n  const contents = appState.operandContents.slice(0, visibleSizes);\n\n  const onEquationChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(appActions.updateEquation(e.target.value));\n  };\n\n  const makeOnShapeChange = (index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(appActions.updateShape(index, e.target.value));\n  };\n\n  const makeOnContentsChange = (index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(appActions.updateContents(index, e.target.value));\n  };\n\n  const onAddShape = () => {\n    dispatch(appActions.addShape());\n  };\n\n  return (\n    <>\n      <p>\n        <button onClick={onAddShape}>Add Shape</button>\n      </p>\n      <p>\n        Equation: <input type=\"text\" onChange={onEquationChange} value={einsumString} />\n      </p>\n      <p>\n        There appear{visibleSizes > 1 ? \"\" : \"s\"} to be {visibleSizes} input tensor\n        {visibleSizes > 1 ? \"s\" : \"\"} in your equation.\n      </p>\n      {range(visibleSizes).map(index => (\n        <p key={index}>\n          <div>\n            Shape of {String.fromCharCode(index + \"A\".charCodeAt(0))}:{\" \"}\n            <input\n              type=\"text\"\n              onChange={makeOnShapeChange(index)}\n              value={typeof shapes[index] === \"string\" ? shapes[index] : \"[]\"}\n            />\n          </div>\n          <div>\n            Contents of {String.fromCharCode(index + \"A\".charCodeAt(0))}:{\" \"}\n            <input\n              type=\"text\"\n              onChange={makeOnContentsChange(index)}\n              value={typeof contents[index] === \"string\" ? contents[index] : \"[]\"}\n            />\n          </div>\n        </p>\n      ))}\n    </>\n  );\n};\n\nexport default ExplainerInput;\n","import { Contraction } from \"../types/einsum_typeguards\";\n\nfunction makeLatexString(contraction: Contraction): string {\n  // Out_{i,k}=\\sum_j A_{i,j} B_{j,k}\n  const outputMatrix = `Out_{${contraction.output_indices.join(\",\")}}`;\n  const summationSymbols = contraction.summation_indices.map(idx => `\\\\sum_${idx}`).join(\" \");\n  function makeInputMatrix(indices: string, n: number) {\n    const asciiA: number = \"A\".charCodeAt(0);\n    const matrixName = String.fromCharCode(asciiA + n);\n    const subscripts = indices.split(\"\").join(\",\");\n\n    return `${matrixName}_{${subscripts}}`;\n  }\n  const inputMatrices = contraction.operand_indices.map(makeInputMatrix).join(\" \");\n\n  return `${outputMatrix} = ${summationSymbols} ${inputMatrices}`;\n}\n\nexport default makeLatexString;\n","import { renderToString } from \"katex\";\nimport \"katex/dist/katex.min.css\";\nimport React from \"react\";\nimport {\n  isErrorMessage,\n  ContractionValidationResult,\n  isContractionValidationResult\n} from \"../types/einsum_typeguards\";\nimport makeLatexString from \"../utils/makeLatexString\";\n\ntype ContractionOutputProps = {\n  explanationJSON: string;\n};\n\nconst ContractionOutput = (props: ContractionOutputProps) => {\n  const { explanationJSON } = props;\n  let contractionErrorMessage;\n  let dangerousKatexHTML;\n  let explanation: ContractionValidationResult;\n  const anyEinsumExplanation = JSON.parse(explanationJSON);\n  if (isContractionValidationResult(anyEinsumExplanation)) {\n    explanation = anyEinsumExplanation;\n  } else {\n    explanation = { Err: \"validateAsJson returned an invalid response\" };\n  }\n\n  if (isErrorMessage(explanation)) {\n    contractionErrorMessage = explanation.Err;\n  } else {\n    const contraction = explanation.Ok;\n    const latexString = makeLatexString(contraction);\n    dangerousKatexHTML = {\n      __html: renderToString(latexString)\n    };\n  }\n\n  return isErrorMessage(explanation) ? (\n    <>\n      <p>There was an error!</p>\n      <p>{contractionErrorMessage}</p>\n    </>\n  ) : (\n    <>\n      <p>Everything is cool!</p>\n      <div dangerouslySetInnerHTML={dangerousKatexHTML} />\n    </>\n  );\n};\n\nexport default ContractionOutput;\n","import React from \"react\";\nimport {\n  isErrorMessage,\n  SizedContractionValidationResult,\n  isSizedContractionValidationResult\n} from \"../types/einsum_typeguards\";\n\ntype AxisLengthOutputProps = {\n  sizedExplanationJSON: string;\n};\n\nconst AxisLengthsOutput = (props: AxisLengthOutputProps) => {\n  const { sizedExplanationJSON } = props;\n  let sizeErrorMessage;\n  let outputSize;\n  let sizedExplanation: SizedContractionValidationResult;\n  const anySizedExplanation = JSON.parse(sizedExplanationJSON);\n  if (isSizedContractionValidationResult(anySizedExplanation)) {\n    sizedExplanation = anySizedExplanation;\n  } else {\n    sizedExplanation = {\n      Err: \"validateAndSizeFromShapesAsStringAsJson returned an invalid response\"\n    };\n  }\n\n  if (isErrorMessage(sizedExplanation)) {\n    sizeErrorMessage = sizedExplanation.Err;\n  } else {\n    outputSize = JSON.stringify(sizedExplanation.Ok.output_size);\n  }\n\n  return isErrorMessage(sizedExplanation) ? (\n    <>\n      <p>The sizes don't work!</p>\n      <p>{sizeErrorMessage}</p>\n    </>\n  ) : (\n    <>\n      <p>The operands match the input and the sizes check out!</p>\n      <div>Output size: {outputSize}</div>\n    </>\n  );\n};\n\nexport default AxisLengthsOutput;\n","function parseShapeString(shapeString: string): number[] {\n  const strippedShapeString = shapeString.replace(/[^\\d,]/g, \" \");\n  const trailingCommaRemoved = strippedShapeString.replace(/,\\s*$/, \"\");\n\n  return trailingCommaRemoved.split(\",\").map(s => parseInt(s.trim(), 10));\n}\n\nexport { parseShapeString };\n","type NDArray = number | NDArrayArray;\n\ninterface NDArrayArray extends Array<NDArray> {}\n\nfunction unflatten(shape: number[], contents: number[]): NDArray {\n  switch (shape.length) {\n    case 0:\n      return contents[0];\n    case 1:\n      return contents.slice();\n    default:\n      const result: NDArray = [];\n      let stride = 1;\n      for (let i = 1; i < shape.length; i++) {\n        stride *= shape[i];\n      }\n      for (let i = 0; i < shape[0]; i++) {\n        result.push(unflatten(shape.slice(1), contents.slice(i * stride, (i + 1) * stride)));\n      }\n      return result;\n  }\n}\n\nexport default function parseOutput(shape: number[], contents: number[]): NDArray {\n  return unflatten(shape, contents);\n}\n","import React from \"react\";\nimport ContractionOutput from \"./ContractionOutput\";\nimport AxisLengthsOutput from \"./AxisLengthsOutput\";\nimport { AppState } from \"../appstate/appState\";\nimport {\n  validateAsJson,\n  validateAndSizeFromShapesAsStringAsJson,\n  slowEinsumAsJson\n} from \"../pkg/einsum\";\nimport { parseShapeString } from \"../utils/parseShapeStrings\";\nimport range from \"../utils/range\";\nimport parseOutput from \"../utils/parseOutputString\";\n\ntype ExplainerOutputProps = {\n  appState: AppState;\n};\n\nconst ExplainerOutput = (props: ExplainerOutputProps) => {\n  const { appState } = props;\n  const einsumString = appState.equation;\n  const { visibleSizes } = appState;\n  const shapes = appState.operandShapes.slice(0, visibleSizes);\n  const contents = appState.operandContents.slice(0, visibleSizes);\n\n  const explanationJSON = validateAsJson(einsumString);\n  const sizedExplanationJSON = validateAndSizeFromShapesAsStringAsJson(\n    einsumString,\n    JSON.stringify(shapes.map(parseShapeString))\n  );\n  const attemptJSON = JSON.stringify(\n    range(visibleSizes).map(i => {\n      let flattenedContents: number[] = [];\n      let unflattenedContents: any[];\n      try {\n        unflattenedContents = JSON.parse(contents[i]);\n        flattenedContents = unflattenedContents.flat(2 ** 16);\n      } catch {\n        flattenedContents = [];\n      }\n\n      return {\n        shape: parseShapeString(shapes[i]),\n        contents: flattenedContents\n      };\n    })\n  );\n  const outputJSON = slowEinsumAsJson(einsumString, attemptJSON);\n  let outputStr = \"Nope\";\n  try {\n    const output = JSON.parse(outputJSON);\n    if (output.Ok) {\n      outputStr = JSON.stringify(parseOutput(output.Ok.shape, output.Ok.contents));\n    } else {\n      outputStr = output.Err;\n    }\n  } catch {\n    outputStr = \"Nope\";\n  }\n\n  return (\n    <>\n      <ContractionOutput explanationJSON={explanationJSON} />\n      <AxisLengthsOutput sizedExplanationJSON={sizedExplanationJSON} />\n      {outputStr}\n    </>\n  );\n};\n\nexport default ExplainerOutput;\n","import React, { useReducer } from \"react\";\nimport ExplainerInput from \"./ExplainerInput\";\nimport ExplainerOutput from \"./ExplainerOutput\";\nimport { reducer, initialState } from \"../appstate/appState\";\nimport \"./App.css\";\n\nconst EinsumExplainer = () => {\n  const [appState, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ExplainerInput appState={appState} dispatch={dispatch} />\n        <ExplainerOutput appState={appState} />\n      </header>\n    </div>\n  );\n};\n\nexport default EinsumExplainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport EinsumExplainer from \"./components/EinsumExplainer\";\nimport * as serviceWorker from \"./utils/serviceWorker\";\nimport init from \"./pkg/einsum.js\";\n\n(async function run() {\n  await init(\"./pkg/einsum_bg.wasm\");\n  ReactDOM.render(<EinsumExplainer />, document.getElementById(\"root\"));\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}