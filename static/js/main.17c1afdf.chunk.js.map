{"version":3,"sources":["pkg/einsum.js","types/einsum_typeguards.ts","appstate/ducks/updateEquation.ts","appstate/ducks/updateShape.ts","appstate/ducks/updateContents.ts","appstate/ducks/addShape.ts","utils/range.ts","appstate/appState.ts","appstate/makeReducer.ts","components/EquationInput.tsx","components/ShapesAndContentsInput.tsx","components/ExplainerInput.tsx","utils/makeLatexString.ts","components/EquationOutput.tsx","components/AxisLengthsOutput.tsx","utils/parseShapeStrings.ts","utils/parseOutputString.ts","components/ComputationOutput.tsx","components/ExplainerOutput.tsx","components/EinsumExplainer.tsx","utils/serviceWorker.js","index.js"],"names":["wasm","passStringToWasm","__exports","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","encodeInto","arg","size","length","ptr","__wbindgen_malloc","writeOffset","view","subarray","_cachedTextEncoder$en","read","written","substring","__wbindgen_realloc","buf","encode","set","cachedTextDecoder","TextDecoder","getStringFromWasm","len","decode","cachedGlobalArgumentPtr","globalArgumentPtr","__wbindgen_global_argument_ptr","cachegetUint32Memory","getUint32Memory","Uint32Array","validateAsJson","input_string","ptr0","len0","retptr","mem","rustptr","rustlen","realRet","slice","__wbindgen_free","validateAndSizeFromShapesAsStringAsJson","operand_shapes","ptr1","len1","slowEinsumAsJson","flattened_operands_as_string","heap","Array","fill","undefined","push","heap_next","__wbindgen_object_drop_ref","i","idx","init","module","result","imports","./einsum","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","e","console","warn","then","r","arrayBuffer","bytes","instantiate","Instance","instance","_ref","exports","__wbindgen_wasm_module","isErrorMessage","hasOwnProperty","isContraction","operand_indices","isContractionSuccess","Ok","isSizedContraction","contraction","Object","entries","every","_ref2","slicedToArray","isOutputSize","output_size","isSizedContractionValidationResult","isSizedContractionSuccess","isFlattenedOperandSuccess","shape","x","contents","isFlattenedOperand","typeguard","action","type","equation","updateEquation","actionCreator","reducer","state","anyEinsumExplanation","visibleSizes","JSON","parse","_unused","objectSpread","TypeError","stringify","UPDATE_SHAPE","index","updateShape","operandShapes","concat","toConsumableArray","UPDATE_CONTENTS","updateContents","operandContents","addShape","range","start","stop","step","arguments","Error","val","initialState","appActions","addShapeDuck","updateEquationDuck","updateShapeDuck","updateContentsDuck","ducks","appReducers","forEach","duck","makeReducer","React","memo","props","dispatch","react_default","a","createElement","onChange","target","value","shapes","makeOnShapeChange","makeOnContentsChange","map","key","String","fromCharCode","charCodeAt","ExplainerInput","appState","Fragment","components_EquationInput","components_ShapesAndContentsInput","makeLatexString","outputMatrix","output_indices","join","summationSymbols","summation_indices","inputMatrices","indices","n","asciiA","matrixName","subscripts","split","EquationOutput","contractionErrorMessage","dangerousKatexHTML","explanation","explanationJSON","Err","latexString","__html","renderToString","dangerouslySetInnerHTML","AxisLengthsOutput","sizeErrorMessage","outputSize","sizedExplanation","sizedExplanationJSON","anySizedExplanation","parseShapeString","shapeString","replace","s","parseInt","trim","parseOutput","output","unflatten","stride","ComputationOutput","errorMessage","outputStr","computationOutput","computationOutputJSON","anyComputationOutput","ExplainerOutput","einsumString","Math","min","components_EquationOutput","components_AxisLengthsOutput","components_ComputationOutput","EinsumExplainer","_useReducer","useReducer","_useReducer2","className","components_ExplainerInput","components_ExplainerOutput","Boolean","window","location","hostname","match","_run","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","ReactDOM","render","components_EinsumExplainer","document","getElementById","apply","this","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17c1afdf.chunk.js","sourcesContent":["\nconst __exports = {};\nlet wasm;\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n        let size = arg.length;\n        let ptr = wasm.__wbindgen_malloc(size);\n        let writeOffset = 0;\n        while (true) {\n            const view = getUint8Memory().subarray(ptr + writeOffset, ptr + size);\n            const { read, written } = cachedTextEncoder.encodeInto(arg, view);\n            writeOffset += written;\n            if (read === arg.length) {\n                break;\n            }\n            arg = arg.substring(read);\n            ptr = wasm.__wbindgen_realloc(ptr, size, size += arg.length * 3);\n        }\n        WASM_VECTOR_LEN = writeOffset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = wasm.__wbindgen_malloc(buf.length);\n        getUint8Memory().set(buf, ptr);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    };\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n/**\n* @param {string} input_string\n* @returns {string}\n*/\nexport function validateAsJson(input_string) {\n    const ptr0 = passStringToWasm(input_string);\n    const len0 = WASM_VECTOR_LEN;\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.validateAsJson(retptr, ptr0, len0);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n\n    }\n\n}\n\n__exports.validateAsJson = validateAsJson;\n\n/**\n* @param {string} input_string\n* @param {string} operand_shapes\n* @returns {string}\n*/\nexport function validateAndSizeFromShapesAsStringAsJson(input_string, operand_shapes) {\n    const ptr0 = passStringToWasm(input_string);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm(operand_shapes);\n    const len1 = WASM_VECTOR_LEN;\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.validateAndSizeFromShapesAsStringAsJson(retptr, ptr0, len0, ptr1, len1);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        wasm.__wbindgen_free(ptr1, len1 * 1);\n\n    }\n\n}\n\n__exports.validateAndSizeFromShapesAsStringAsJson = validateAndSizeFromShapesAsStringAsJson;\n\n/**\n* @param {string} input_string\n* @param {string} flattened_operands_as_string\n* @returns {string}\n*/\nexport function slowEinsumAsJson(input_string, flattened_operands_as_string) {\n    const ptr0 = passStringToWasm(input_string);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm(flattened_operands_as_string);\n    const len1 = WASM_VECTOR_LEN;\n    const retptr = globalArgumentPtr();\n    try {\n        wasm.slowEinsumAsJson(retptr, ptr0, len0, ptr1, len1);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getStringFromWasm(rustptr, rustlen).slice();\n        wasm.__wbindgen_free(rustptr, rustlen * 1);\n        return realRet;\n\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n        wasm.__wbindgen_free(ptr1, len1 * 1);\n\n    }\n\n}\n\n__exports.slowEinsumAsJson = slowEinsumAsJson;\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n__exports.__wbindgen_object_drop_ref = __wbindgen_object_drop_ref;\n\nfunction init(module) {\n    let result;\n    const imports = { './einsum': __exports };\n    if (module instanceof URL || typeof module === 'string' || module instanceof Request) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                console.warn(\"`WebAssembly.instantiateStreaming` failed. Assuming this is because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                return response\n                .then(r => r.arrayBuffer())\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return wasm;\n    });\n}\n\nexport default init;\n\n","export type ErrorMessage = {\n  Err: string;\n};\n\nfunction isErrorMessage(r: any): r is ErrorMessage {\n  return (r as object).hasOwnProperty(\"Err\");\n}\n\nexport type Contraction = {\n  operand_indices: string[];\n  output_indices: string[];\n  summation_indices: string[];\n};\n\nfunction isContraction(r: object): r is Contraction {\n  return (\n    r.hasOwnProperty(\"operand_indices\") &&\n    (r as Contraction).operand_indices instanceof Array &&\n    r.hasOwnProperty(\"output_indices\") &&\n    r.hasOwnProperty(\"summation_indices\")\n  );\n}\n\nexport type ContractionSuccess = {\n  Ok: Contraction;\n};\n\nfunction isContractionSuccess(r: any): r is ContractionSuccess {\n  return (r as object).hasOwnProperty(\"Ok\") && isContraction((r as ContractionSuccess).Ok);\n}\n\nexport type ContractionValidationResult = ContractionSuccess | ErrorMessage;\n\nfunction isContractionValidationResult(r: any): r is ContractionValidationResult {\n  return (\n    isErrorMessage(r as ContractionValidationResult) ||\n    isContractionSuccess(r as ContractionValidationResult)\n  );\n}\n\nexport type OutputSize = { [key: string]: number };\n\nfunction isOutputSize(r: any): r is OutputSize {\n  return Object.entries(r as object).every(([_, val]) => typeof val === \"number\");\n}\n\nexport type SizedContraction = {\n  contraction: Contraction;\n  output_size: OutputSize;\n};\n\nfunction isSizedContraction(r: object): r is SizedContraction {\n  return (\n    r.hasOwnProperty(\"contraction\") &&\n    isContraction((r as SizedContraction).contraction) &&\n    r.hasOwnProperty(\"output_size\") &&\n    isOutputSize((r as SizedContraction).output_size)\n  );\n}\n\nexport type SizedContractionSuccess = {\n  Ok: SizedContraction;\n};\n\nfunction isSizedContractionSuccess(r: object): r is SizedContractionSuccess {\n  return r.hasOwnProperty(\"Ok\") && isSizedContraction((r as SizedContractionSuccess).Ok);\n}\n\nexport type SizedContractionValidationResult = SizedContractionSuccess | ErrorMessage;\n\nfunction isSizedContractionValidationResult(r: any): r is SizedContractionValidationResult {\n  return isErrorMessage(r) || isSizedContractionSuccess(r as SizedContractionValidationResult);\n}\n\nexport type FlattenedOperand = {\n  shape: number[];\n  contents: number[];\n};\n\nfunction isFlattenedOperand(r: object): r is FlattenedOperand {\n  return (\n    r.hasOwnProperty(\"shape\") &&\n    (r as FlattenedOperand).shape instanceof Array &&\n    (r as FlattenedOperand).shape.every(x => typeof x === \"number\") &&\n    r.hasOwnProperty(\"contents\") &&\n    (r as FlattenedOperand).contents instanceof Array &&\n    (r as FlattenedOperand).contents.every(x => typeof x === \"number\")\n  );\n}\n\nexport type FlattenedOperandSuccess = {\n  Ok: FlattenedOperand;\n};\n\nfunction isFlattenedOperandSuccess(r: object): r is FlattenedOperandSuccess {\n  return r.hasOwnProperty(\"Ok\") && isFlattenedOperand((r as FlattenedOperandSuccess).Ok);\n}\n\nexport type FlattenedOperandResult = FlattenedOperandSuccess | ErrorMessage;\n\nfunction isFlattenedOperandResult(r: any): r is FlattenedOperandResult {\n  return isErrorMessage(r) || isFlattenedOperandSuccess(r as FlattenedOperandResult);\n}\n\nexport {\n  isErrorMessage,\n  isContractionSuccess,\n  isContractionValidationResult,\n  isSizedContractionValidationResult,\n  isFlattenedOperandResult\n};\n","import { validateAsJson } from \"../../pkg/einsum\";\nimport { isContractionSuccess } from \"../../types/einsum_typeguards\";\nimport { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nconst UPDATE_EQUATION = \"updateEquation\";\n\nexport interface UpdateEquationAction extends AnyAction {\n  equation: string;\n}\n\nconst typeguard = (action: AppAction): action is UpdateEquationAction =>\n  action.type === UPDATE_EQUATION &&\n  action.hasOwnProperty(\"equation\") &&\n  typeof (action as UpdateEquationAction).equation === \"string\";\n\nconst actionCreator = (equation: string): UpdateEquationAction => ({\n  type: UPDATE_EQUATION,\n  equation\n});\n\nconst reducer = (state: AppState, action: AppAction): AppState => {\n  if (typeguard(action)) {\n    const { equation } = action;\n    let anyEinsumExplanation: any = null;\n    let { visibleSizes } = state;\n\n    try {\n      anyEinsumExplanation = JSON.parse(validateAsJson(equation));\n      if (isContractionSuccess(anyEinsumExplanation)) {\n        visibleSizes = anyEinsumExplanation.Ok.operand_indices.length;\n      }\n      // tslint:disable-next-line: no-empty\n    } catch {}\n\n    return {\n      ...state,\n      visibleSizes,\n      equation: (action as UpdateEquationAction).equation\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ action }));\n  }\n};\n\nexport default {\n  type: UPDATE_EQUATION,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","import { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nexport interface UpdateShapeAction extends AnyAction {\n  index: number;\n  shape: string;\n}\n\nconst UPDATE_SHAPE = \"updateShape\";\nfunction typeguard(action: AppAction): action is UpdateShapeAction {\n  return (\n    action.type === UPDATE_SHAPE &&\n    action.hasOwnProperty(\"index\") &&\n    typeof (action as UpdateShapeAction).index === \"number\" &&\n    action.hasOwnProperty(\"shape\") &&\n    typeof (action as UpdateShapeAction).shape === \"string\"\n  );\n}\n\nfunction actionCreator(index: number, shape: string): UpdateShapeAction {\n  return {\n    type: UPDATE_SHAPE,\n    index,\n    shape\n  };\n}\n\nfunction reducer(state: AppState, action: AppAction): AppState {\n  if (typeguard(action)) {\n    const { index, shape } = action;\n    return {\n      ...state,\n      operandShapes: [\n        ...state.operandShapes.slice(0, index),\n        shape,\n        ...state.operandShapes.slice(index + 1)\n      ]\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ reducer: UPDATE_SHAPE, action }));\n  }\n}\n\nexport default {\n  type: UPDATE_SHAPE,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","import { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nexport interface UpdateContentsAction extends AnyAction {\n  index: number;\n  contents: string;\n}\n\nconst UPDATE_CONTENTS = \"updateContents\";\nfunction typeguard(action: AppAction): action is UpdateContentsAction {\n  return (\n    action.type === UPDATE_CONTENTS &&\n    action.hasOwnProperty(\"index\") &&\n    typeof (action as UpdateContentsAction).index === \"number\" &&\n    action.hasOwnProperty(\"contents\") &&\n    typeof (action as UpdateContentsAction).contents === \"string\"\n  );\n}\n\nfunction actionCreator(index: number, contents: string): UpdateContentsAction {\n  return {\n    type: UPDATE_CONTENTS,\n    index,\n    contents\n  };\n}\n\nfunction reducer(state: AppState, action: AppAction): AppState {\n  if (typeguard(action)) {\n    const { index, contents } = action;\n    return {\n      ...state,\n      operandContents: [\n        ...state.operandContents.slice(0, index),\n        contents,\n        ...state.operandContents.slice(index + 1)\n      ]\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ reducer: UPDATE_CONTENTS, action }));\n  }\n}\n\nexport default {\n  type: UPDATE_CONTENTS,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","import { AppState, AppAction } from \"../appState\";\nimport { AnyAction } from \"../makeReducer\";\n\nconst ADD_SHAPE = \"addShape\";\n\n// tslint:disable-next-line: no-empty-interface\nexport interface AddShapeAction extends AnyAction {}\n\nconst typeguard = (action: AppAction): action is AddShapeAction => action.type === ADD_SHAPE;\n\nconst actionCreator = (): AddShapeAction => ({\n  type: ADD_SHAPE\n});\n\nconst reducer = (state: AppState, action: AppAction): AppState => {\n  if (typeguard(action)) {\n    return {\n      ...state,\n      visibleSizes: state.visibleSizes + 1\n    };\n  } else {\n    throw new TypeError(JSON.stringify({ action }));\n  }\n};\n\nexport default {\n  type: ADD_SHAPE,\n  typeguard,\n  actionCreator,\n  reducer\n};\n","export default function range(start: number, stop?: number, step: number = 1) {\n  if (step === 0) {\n    throw new Error(\"range: step must not be zero\");\n  }\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n  }\n  const result: number[] = [];\n  let val = start;\n  while (val < stop) {\n    result.push(val);\n    val += step;\n  }\n  return result;\n}\n","import updateEquationDuck, { UpdateEquationAction } from \"./ducks/updateEquation\";\nimport updateShapeDuck, { UpdateShapeAction } from \"./ducks/updateShape\";\nimport updateContentsDuck, { UpdateContentsAction } from \"./ducks/updateContents\";\nimport addShapeDuck, { AddShapeAction } from \"./ducks/addShape\";\nimport makeReducer from \"./makeReducer\";\nimport range from \"../utils/range\";\n\n// What is the state of the app?\n// (1) The string the user entered\n// (2) How many arrays are visible that can have a size entered\n// (3) The shapes that have been entered (as strings)\n// (4) The contents that have been entered (as strings)\n//\n// Note: (1) and (2) can conflict\n// This is OK!\n// However, when the string changes, update (2) automatically if the new string is valid\n\n// To make a new action:\n// (1) Make a duck (type, typeguard, actionCreator, reducer)\n// (2) Export the duck and an interface extending AnyAction from the duck file\n// (3) Import the duck and the action in this file\n// (4) Add the action to \"type AppAction\"\n// (5) Add the action to \"const appActions\"\n// (6) Add the duck to the call to makeReducer()\n\nexport type AppState = {\n  equation: string;\n  visibleSizes: number;\n  operandShapes: string[];\n  operandContents: string[];\n};\n\nconst initialState: AppState = {\n  equation: \"ij,jk->ik\",\n  visibleSizes: 2,\n  operandShapes: [\"[2,3]\", \"[3,5]\"],\n  operandContents: [JSON.stringify(range(6)), JSON.stringify(range(0, 150, 10))]\n};\n\nexport type AppAction =\n  | AddShapeAction\n  | UpdateEquationAction\n  | UpdateShapeAction\n  | UpdateContentsAction;\n\nconst appActions = {\n  addShape: addShapeDuck.actionCreator,\n  updateEquation: updateEquationDuck.actionCreator,\n  updateShape: updateShapeDuck.actionCreator,\n  updateContents: updateContentsDuck.actionCreator\n};\nconst reducer = makeReducer([\n  addShapeDuck,\n  updateEquationDuck,\n  updateShapeDuck,\n  updateContentsDuck\n]);\n\nexport { initialState, reducer, appActions };\n","import { AppState, AppAction } from \"./appState\";\n\nexport interface AnyAction {\n  type: string;\n}\n\nexport type Reducer = (state: AppState, action: AppAction) => AppState;\nexport type ActionCreator = (...args: any[]) => AppAction;\nexport type ActionTypeGuard = (action: AppAction) => boolean;\nexport type Duck = {\n  type: string;\n  typeguard: ActionTypeGuard;\n  actionCreator: ActionCreator;\n  reducer: Reducer;\n};\n\nexport default function makeReducer(ducks: Duck[]): Reducer {\n  const appReducers: { [key: string]: Reducer } = {};\n\n  ducks.forEach(duck => {\n    if (appReducers[duck.type]) {\n      throw new Error(`Multiple declarations for ${duck.type}`);\n    } else {\n      appReducers[duck.type] = duck.reducer;\n    }\n  });\n\n  return (state: AppState, action: AppAction): AppState =>\n    appReducers[action.type](state, action);\n}\n","import React, { ChangeEvent } from \"react\";\nimport { appActions, AppAction } from \"../appstate/appState\";\n\ntype ExplainerInputProps = {\n  equation: string;\n  dispatch: React.Dispatch<AppAction>;\n};\n\nconst EquationInput = (props: ExplainerInputProps) => {\n  const { equation, dispatch } = props;\n\n  const onEquationChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(appActions.updateEquation(e.target.value));\n  };\n\n  return (\n    <p>\n      Equation: <input type=\"text\" onChange={onEquationChange} value={equation} />\n    </p>\n  );\n};\n\nexport default React.memo(EquationInput);\n","import React, { ChangeEvent } from \"react\";\nimport { appActions, AppAction } from \"../appstate/appState\";\nimport range from \"../utils/range\";\n\ntype ShapesAndContentsInputProps = {\n  visibleSizes: number;\n  operandShapes: string[];\n  operandContents: string[];\n  dispatch: React.Dispatch<AppAction>;\n};\n\nconst ShapesAndContentsInput = (props: ShapesAndContentsInputProps) => {\n  const { dispatch, visibleSizes, operandContents, operandShapes } = props;\n  const shapes = operandShapes.slice(0, visibleSizes);\n  const contents = operandContents.slice(0, visibleSizes);\n\n  const makeOnShapeChange = (index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(appActions.updateShape(index, e.target.value));\n  };\n\n  const makeOnContentsChange = (index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(appActions.updateContents(index, e.target.value));\n  };\n\n  return (\n    <p>\n      {range(visibleSizes).map(index => (\n        <div key={index}>\n          <span>\n            Shape of {String.fromCharCode(index + \"A\".charCodeAt(0))}:{\" \"}\n            <input\n              type=\"text\"\n              onChange={makeOnShapeChange(index)}\n              value={typeof shapes[index] === \"string\" ? shapes[index] : \"[]\"}\n            />\n          </span>\n          <span>\n            Contents of {String.fromCharCode(index + \"A\".charCodeAt(0))}:{\" \"}\n            <input\n              type=\"text\"\n              onChange={makeOnContentsChange(index)}\n              value={typeof contents[index] === \"string\" ? contents[index] : \"[]\"}\n            />\n          </span>\n        </div>\n      ))}\n    </p>\n  );\n};\n\nexport default React.memo(ShapesAndContentsInput);\n","import React from \"react\";\nimport { AppState, AppAction } from \"../appstate/appState\";\nimport EquationInput from \"./EquationInput\";\nimport ShapesAndContentsInput from \"./ShapesAndContentsInput\";\n\ntype ExplainerInputProps = {\n  appState: AppState;\n  dispatch: React.Dispatch<AppAction>;\n};\n\nconst ExplainerInput = (props: ExplainerInputProps) => {\n  const { appState, dispatch } = props;\n  const { equation, visibleSizes, operandContents, operandShapes } = appState;\n\n  return (\n    <>\n      <EquationInput equation={equation} dispatch={dispatch} />\n      <ShapesAndContentsInput\n        dispatch={dispatch}\n        visibleSizes={visibleSizes}\n        operandContents={operandContents}\n        operandShapes={operandShapes}\n      />\n    </>\n  );\n};\n\nexport default ExplainerInput;\n","import { Contraction } from \"../types/einsum_typeguards\";\n\nfunction makeLatexString(contraction: Contraction): string {\n  // Out_{i,k}=\\sum_j A_{i,j} B_{j,k}\n  const outputMatrix = `Out_{${contraction.output_indices.join(\",\")}}`;\n  const summationSymbols = contraction.summation_indices.map(idx => `\\\\sum_${idx}`).join(\" \");\n  function makeInputMatrix(indices: string, n: number) {\n    const asciiA: number = \"A\".charCodeAt(0);\n    const matrixName = String.fromCharCode(asciiA + n);\n    const subscripts = indices.split(\"\").join(\",\");\n\n    return `${matrixName}_{${subscripts}}`;\n  }\n  const inputMatrices = contraction.operand_indices.map(makeInputMatrix).join(\" \");\n\n  return `${outputMatrix} = ${summationSymbols} ${inputMatrices}`;\n}\n\nexport default makeLatexString;\n","import { renderToString } from \"katex\";\nimport \"katex/dist/katex.min.css\";\nimport React from \"react\";\nimport {\n  isErrorMessage,\n  ContractionValidationResult,\n  isContractionValidationResult\n} from \"../types/einsum_typeguards\";\nimport makeLatexString from \"../utils/makeLatexString\";\n\ntype EquationOutputProps = {\n  explanationJSON: string;\n};\n\nconst EquationOutput = (props: EquationOutputProps) => {\n  const { explanationJSON } = props;\n  let contractionErrorMessage;\n  let dangerousKatexHTML;\n  let explanation: ContractionValidationResult;\n  const anyEinsumExplanation = JSON.parse(explanationJSON);\n  if (isContractionValidationResult(anyEinsumExplanation)) {\n    explanation = anyEinsumExplanation;\n  } else {\n    explanation = { Err: \"validateAsJson returned an invalid response\" };\n  }\n\n  if (isErrorMessage(explanation)) {\n    contractionErrorMessage = explanation.Err;\n  } else {\n    const contraction = explanation.Ok;\n    const latexString = makeLatexString(contraction);\n    dangerousKatexHTML = {\n      __html: renderToString(latexString)\n    };\n  }\n\n  return isErrorMessage(explanation) ? (\n    <>\n      <p>There was an error!</p>\n      <p>{contractionErrorMessage}</p>\n    </>\n  ) : (\n    <>\n      <p>Everything is cool!</p>\n      <div dangerouslySetInnerHTML={dangerousKatexHTML} />\n    </>\n  );\n};\n\nexport default EquationOutput;\n","import React from \"react\";\nimport {\n  isErrorMessage,\n  SizedContractionValidationResult,\n  isSizedContractionValidationResult\n} from \"../types/einsum_typeguards\";\n\ntype AxisLengthOutputProps = {\n  sizedExplanationJSON: string;\n};\n\nconst AxisLengthsOutput = (props: AxisLengthOutputProps) => {\n  const { sizedExplanationJSON } = props;\n  let sizeErrorMessage;\n  let outputSize;\n  let sizedExplanation: SizedContractionValidationResult;\n  const anySizedExplanation = JSON.parse(sizedExplanationJSON);\n  if (isSizedContractionValidationResult(anySizedExplanation)) {\n    sizedExplanation = anySizedExplanation;\n  } else {\n    sizedExplanation = {\n      Err: \"validateAndSizeFromShapesAsStringAsJson returned an invalid response\"\n    };\n  }\n\n  if (isErrorMessage(sizedExplanation)) {\n    sizeErrorMessage = sizedExplanation.Err;\n  } else {\n    outputSize = JSON.stringify(sizedExplanation.Ok.output_size);\n  }\n\n  return isErrorMessage(sizedExplanation) ? (\n    <>\n      <p>The sizes don't work!</p>\n      <p>{sizeErrorMessage}</p>\n    </>\n  ) : (\n    <>\n      <p>The operands match the input and the sizes check out!</p>\n      <div>Output size: {outputSize}</div>\n    </>\n  );\n};\n\nexport default AxisLengthsOutput;\n","function parseShapeString(shapeString: string): number[] {\n  const strippedShapeString = shapeString.replace(/[^\\d,]/g, \" \");\n  const trailingCommaRemoved = strippedShapeString.replace(/,\\s*$/, \"\");\n\n  return trailingCommaRemoved.split(\",\").map(s => parseInt(s.trim(), 10));\n}\n\nexport { parseShapeString };\n","import { FlattenedOperand } from \"../types/einsum_typeguards\";\n\ntype NDArray = number | NDArrayArray;\n\ninterface NDArrayArray extends Array<NDArray> {}\n\nfunction unflatten(shape: number[], contents: number[]): NDArray {\n  switch (shape.length) {\n    case 0:\n      return contents[0];\n    case 1:\n      return contents.slice();\n    default:\n      const result: NDArray = [];\n      let stride = 1;\n      for (let i = 1; i < shape.length; i++) {\n        stride *= shape[i];\n      }\n      for (let i = 0; i < shape[0]; i++) {\n        result.push(unflatten(shape.slice(1), contents.slice(i * stride, (i + 1) * stride)));\n      }\n      return result;\n  }\n}\n\nexport default function parseOutput(output: FlattenedOperand): NDArray {\n  const { shape, contents } = output;\n  return unflatten(shape, contents);\n}\n","import React from \"react\";\nimport {\n  isErrorMessage,\n  FlattenedOperandResult,\n  isFlattenedOperandResult\n} from \"../types/einsum_typeguards\";\nimport parseOutput from \"../utils/parseOutputString\";\n\ntype ComputationOutputProps = {\n  computationOutputJSON: string;\n};\n\nconst ComputationOutput = (props: ComputationOutputProps) => {\n  const { computationOutputJSON } = props;\n  let errorMessage;\n  let outputStr;\n  let computationOutput: FlattenedOperandResult;\n  const anyComputationOutput = JSON.parse(computationOutputJSON);\n  if (isFlattenedOperandResult(anyComputationOutput)) {\n    computationOutput = anyComputationOutput;\n  } else {\n    computationOutput = {\n      Err: \"slowEinsumAsJson returned an invalid response\"\n    };\n  }\n\n  if (isErrorMessage(computationOutput)) {\n    errorMessage = computationOutput.Err;\n  } else {\n    outputStr = JSON.stringify(parseOutput(computationOutput.Ok));\n  }\n\n  return isErrorMessage(computationOutput) ? (\n    <>\n      <p>Something went wrong!</p>\n      <div>{errorMessage}</div>\n    </>\n  ) : (\n    <>\n      <p>Your computation is valid!</p>\n      <div>Einsum Result: {outputStr}</div>\n    </>\n  );\n};\n\nexport default ComputationOutput;\n","import React from \"react\";\nimport EquationOutput from \"./EquationOutput\";\nimport AxisLengthsOutput from \"./AxisLengthsOutput\";\nimport { AppState } from \"../appstate/appState\";\nimport {\n  validateAsJson,\n  validateAndSizeFromShapesAsStringAsJson,\n  slowEinsumAsJson\n} from \"../pkg/einsum\";\nimport { parseShapeString } from \"../utils/parseShapeStrings\";\nimport range from \"../utils/range\";\nimport ComputationOutput from \"./ComputationOutput\";\n\ntype ExplainerOutputProps = {\n  appState: AppState;\n};\n\nconst ExplainerOutput = (props: ExplainerOutputProps) => {\n  const { appState } = props;\n  const einsumString = appState.equation;\n  const { visibleSizes } = appState;\n  const shapes = appState.operandShapes.slice(0, visibleSizes);\n  const contents = appState.operandContents.slice(0, visibleSizes);\n\n  const explanationJSON = validateAsJson(einsumString);\n  const sizedExplanationJSON = validateAndSizeFromShapesAsStringAsJson(\n    einsumString,\n    JSON.stringify(shapes.map(parseShapeString))\n  );\n  const operandsJSON = JSON.stringify(\n    range(Math.min(shapes.length, contents.length)).map(i => {\n      return {\n        shape: parseShapeString(shapes[i]),\n        contents: parseShapeString(contents[i])\n      };\n    })\n  );\n  const computationOutputJSON = slowEinsumAsJson(einsumString, operandsJSON);\n\n  return (\n    <>\n      <EquationOutput explanationJSON={explanationJSON} />\n      <AxisLengthsOutput sizedExplanationJSON={sizedExplanationJSON} />\n      <ComputationOutput computationOutputJSON={computationOutputJSON} />\n    </>\n  );\n};\n\nexport default ExplainerOutput;\n","import React, { useReducer } from \"react\";\nimport ExplainerInput from \"./ExplainerInput\";\nimport ExplainerOutput from \"./ExplainerOutput\";\nimport { reducer, initialState } from \"../appstate/appState\";\nimport \"./App.css\";\n\nconst EinsumExplainer = () => {\n  const [appState, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ExplainerInput appState={appState} dispatch={dispatch} />\n        <ExplainerOutput appState={appState} />\n      </header>\n    </div>\n  );\n};\n\nexport default EinsumExplainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport EinsumExplainer from \"./components/EinsumExplainer\";\nimport * as serviceWorker from \"./utils/serviceWorker\";\nimport init from \"./pkg/einsum.js\";\n\n(async function run() {\n  await init(\"./pkg/einsum_bg.wasm\");\n  ReactDOM.render(<EinsumExplainer />, document.getElementById(\"root\"));\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}